/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Footer as PrismaFooter } from "@prisma/client";

export class FooterServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FooterCountArgs, "select">): Promise<number> {
    return this.prisma.footer.count(args);
  }

  async footers<T extends Prisma.FooterFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.FooterFindManyArgs>
  ): Promise<PrismaFooter[]> {
    return this.prisma.footer.findMany<Prisma.FooterFindManyArgs>(args);
  }
  async footer<T extends Prisma.FooterFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.FooterFindUniqueArgs>
  ): Promise<PrismaFooter | null> {
    return this.prisma.footer.findUnique(args);
  }
  async createFooter<T extends Prisma.FooterCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FooterCreateArgs>
  ): Promise<PrismaFooter> {
    return this.prisma.footer.create<T>(args);
  }
  async updateFooter<T extends Prisma.FooterUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FooterUpdateArgs>
  ): Promise<PrismaFooter> {
    return this.prisma.footer.update<T>(args);
  }
  async deleteFooter<T extends Prisma.FooterDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.FooterDeleteArgs>
  ): Promise<PrismaFooter> {
    return this.prisma.footer.delete(args);
  }
}
