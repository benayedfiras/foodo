/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  JobOffer as PrismaJobOffer,
  Department as PrismaDepartment,
} from "@prisma/client";

export class JobOfferServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.JobOfferCountArgs, "select">): Promise<number> {
    return this.prisma.jobOffer.count(args);
  }

  async jobOffers<T extends Prisma.JobOfferFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.JobOfferFindManyArgs>
  ): Promise<PrismaJobOffer[]> {
    return this.prisma.jobOffer.findMany<Prisma.JobOfferFindManyArgs>(args);
  }
  async jobOffer<T extends Prisma.JobOfferFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.JobOfferFindUniqueArgs>
  ): Promise<PrismaJobOffer | null> {
    return this.prisma.jobOffer.findUnique(args);
  }
  async createJobOffer<T extends Prisma.JobOfferCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.JobOfferCreateArgs>
  ): Promise<PrismaJobOffer> {
    return this.prisma.jobOffer.create<T>(args);
  }
  async updateJobOffer<T extends Prisma.JobOfferUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.JobOfferUpdateArgs>
  ): Promise<PrismaJobOffer> {
    return this.prisma.jobOffer.update<T>(args);
  }
  async deleteJobOffer<T extends Prisma.JobOfferDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.JobOfferDeleteArgs>
  ): Promise<PrismaJobOffer> {
    return this.prisma.jobOffer.delete(args);
  }

  async getDepartment(parentId: string): Promise<PrismaDepartment | null> {
    return this.prisma.jobOffer
      .findUnique({
        where: { id: parentId },
      })
      .department();
  }
}
